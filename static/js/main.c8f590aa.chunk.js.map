{"version":3,"sources":["actions/game.js","helpers/consts.js","helpers/board.js","sagas/gameLogic.js","sagas/gameLoop.js","reducers/game.js","sagas/apples.js","reducers/board.js","actions/player.js","reducers/player.js","reducers/rootReducer.js","store.js","components/animator.js","components/board.js","components/animatedBoard.js","components/game.js","components/fork-me.js","components/app.js","registerServiceWorker.js","index.js"],"names":["GAME_RESET","Symbol","TIME_TICKED","startGameIfPossible","key","dispatch","getState","some","k","checkKeyMatters","game","running","type","timePassed","tickTime","delta","DIRECTIONS","EAST","WEST","NORTH","SOUTH","TILES","WALL","EMPTY","SNAKE_DEAD","SNAKE_HEAD","SNAKE_NECK","SNAKE_BODY","SNAKE_TAIL","APPLE","setTile","board","x","y","newTile","tile","generateCol","generateRow","size","defaultTile","Array","keys","map","c","aliveSnakePositions","deadSnakePositions","concat","drawSnake","startingBoard","snake","alive","reduce","i","currentPosition","totalLength","length","getSnek","getBoard","boardSize","apples","drawApples","r","moveInDirection","direction","isApple","a","killSnake","eatApple","moveSnake","getCurrentSnake","movePlayer","checkWallCollision","checkSnakeCollision","checkAppleChomp","gameLogic","gameLogicSaga","SNAKE_MOVED","APPLE_EATEN","SNAKE_DIED","put","select","state","snakeHead","currentLocation","playerDirection","player","nextDirection","boardLimit","pos","newLocation","didCollide","didWrap","didEatApple","takeLatest","gameOver","delayGameOver","gameLoopSaga","GAME_OVER","call","delay","all","takeEvery","initialState","addApple","getApplePositionWhitelist","getRandomApplePosition","makeApple","appleSaga","APPLE_ADDED","validSpots","iterator","forEach","newSpot","s","push","applePositionWhitelist","max","selectedPosition","Math","floor","random","race","dead","take","timer","randomApplePosition","removeTailIfNeeded","intendedLength","newSnake","pop","applesEaten","getLength","PLAYER_CHANGED_DIRECTION","keyToDirectionMap","w","d","directionToReverseMap","changePlayerDirection","Object","prototype","hasOwnProperty","currentDirection","checkKeyIsNew","checkKeyIsNotReverse","combineReducers","action","snakeWithNewHead","snakeWithTailRemovedIfNeeded","filter","sagaMiddleware","createSagaMiddleware","middleware","thunk","logger","composedEnhancers","compose","applyMiddleware","store","createStore","rootReducer","run","noop","snakeTileToContent","mapTileToClass","renderCol","className","renderTile","renderRow","row","BoardComponent","animate","timestep","maxFPS","AnimatedComponent","Animator","this","props","userUpdate","begin","userBegin","loop","MainLoop","setMaxAllowedFPS","setSimulationTimestep","setBegin","setUpdate","setDraw","forceUpdate","setEnd","_","panic","resetFrameDelta","setState","start","nextProps","stop","React","Component","defaultProps","connect","bindActionCreators","GameComponent","document","addEventListener","removeEventListener","forkMe","href","aria-label","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","target","querySelector","render","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c8f590aa.chunk.js","sourcesContent":["export const GAME_RESET = Symbol('game/GAME_RESET');\nexport const TIME_TICKED = Symbol('game/TIME_TICKED');\n\nconst startGame = () => dispatch => (\n  dispatch({\n    type: GAME_RESET,\n  })\n);\n\nconst checkKeyMatters = key => [\"w\", \"s\", \"a\", \"d\", \"r\"].some(k => k === key);\n\nexport const startGameIfPossible = ({ key }) => (dispatch, getState) => (\n  checkKeyMatters(key) && !getState().game.running ? dispatch(startGame()) : null\n);\n\nconst minimumToTick = 100;\nlet timePassed = 0;\n\n// eslint-disable-next-line no-return-assign\nexport const tickTime = delta => dispatch => (\n  (timePassed + delta > minimumToTick) ?\n    dispatch({\n      type: TIME_TICKED,\n    }) && (timePassed = 0) : (timePassed += delta)\n);\n","const EAST = Symbol('east');\nconst WEST = Symbol('west');\nconst NORTH = Symbol('north');\nconst SOUTH = Symbol('south');\n\nexport const DIRECTIONS = {\n  EAST,\n  WEST,\n  NORTH,\n  SOUTH,\n};\n\nconst WALL = Symbol('wallTile');\nconst EMPTY = Symbol('emptyTile');\nconst SNAKE_DEAD = Symbol('snakeDead');\nconst SNAKE_HEAD = Symbol('snakeHead');\nconst SNAKE_NECK = Symbol('snakeNeck');\nconst SNAKE_BODY = Symbol('snakeBody');\nconst SNAKE_TAIL = Symbol('snakeTail');\nconst APPLE = Symbol('apple');\n\nexport const TILES = {\n  WALL,\n  EMPTY,\n  SNAKE_DEAD,\n  SNAKE_HEAD,\n  SNAKE_NECK,\n  SNAKE_BODY,\n  SNAKE_TAIL,\n  APPLE,\n};\n","import { DIRECTIONS, TILES } from './consts';\n\nconst {\n  EAST, WEST, NORTH, SOUTH,\n} = DIRECTIONS;\nconst {\n  WALL, EMPTY, SNAKE_BODY, SNAKE_DEAD, SNAKE_HEAD, SNAKE_NECK, SNAKE_TAIL, APPLE,\n} = TILES;\n\n\nconst setTile = (board, x, y, newTile) => {\n  // eslint-disable-next-line\n  board[x][y].tile = newTile;\n  return board;\n};\n\nconst generateCol = tile => ({ tile });\n\nconst generateRow = (size, defaultTile) => ([...Array(size).keys()].map(c => (\n  c === 0 || c === (size - 1) ? generateCol(WALL) : generateCol(defaultTile)))\n);\n\nconst generateNewBoard = size => ([...Array(size).keys()].map(r => (\n  r === 0 || r === (size - 1) ? generateRow(size, WALL) : generateRow(size, EMPTY)))\n);\n\n/* eslint-disable */\nconst aliveSnakePositions = [ SNAKE_HEAD, SNAKE_NECK, SNAKE_BODY, SNAKE_TAIL ];\nconst deadSnakePositions = [ SNAKE_DEAD, SNAKE_BODY, SNAKE_DEAD ].concat(...aliveSnakePositions);\n\nconst getSnek = (currentPosition, alive, totalLength) => (\n  alive ? aliveSnakePositions[currentPosition % aliveSnakePositions.length] :\n  deadSnakePositions[currentPosition % deadSnakePositions.length] \n)\n/* eslint-enable */\n\n\nconst drawSnake = (startingBoard, snake, alive) => snake.reduce(\n  (board, { x, y }, i) => setTile(\n    board, x, y,\n    getSnek(i, alive, snake.length),\n  ),\n  startingBoard,\n);\n\nconst drawApples = (startingBoard, apples) => apples.reduce(\n  (board, { x, y }) => setTile(board, x, y, APPLE),\n  startingBoard,\n);\n\nexport const getBoard = ({ boardSize, snake, apples }, alive) => (\n  drawApples(drawSnake(generateNewBoard(boardSize), snake, alive), apples)\n);\n\nexport const moveInDirection = ({ x, y }, direction) => (\n  {\n    x: x + (direction === SOUTH ? 1 : (direction === NORTH ? -1 : 0)),\n    y: y + (direction === EAST ? 1 : (direction === WEST ? -1 : 0)),\n  }\n);\n\nexport const isApple = (apples, { x, y }) => apples.some(a => a.x === x && a.y === y);\n","import { put, takeLatest, select } from 'redux-saga/effects';\n\nimport { moveInDirection, isApple } from '../helpers/board';\nimport { TIME_TICKED } from '../actions/game';\n\nexport const SNAKE_MOVED = Symbol('gameLoop/PLAYER_MOVED');\nexport const APPLE_EATEN = Symbol('gameLoop/APPLE_EATEN');\nexport const SNAKE_DIED = Symbol('gameLoop/SNAKE_DIED');\n\nfunction* killSnake({ x, y }) {\n  yield put({ type: SNAKE_DIED, x, y });\n}\n\nfunction* eatApple({ x, y }) {\n  yield put({ type: APPLE_EATEN, x, y });\n}\n\nfunction* moveSnake({ x, y, length }) {\n  yield put({\n    type: SNAKE_MOVED, x, y, length,\n  });\n}\n\nfunction* getCurrentSnake() {\n  const { snake } = yield select(state => ({\n    snake: state.board.snake,\n  }));\n  const snakeHead = snake[0];\n  return {\n    currentLocation: snakeHead,\n  };\n}\n\nfunction* movePlayer() {\n  const { snake, playerDirection } = yield select(state => ({\n    snake: state.board.snake,\n    // playerDirection: state.player.directions[0]\n    playerDirection: state.player.nextDirection,\n  }));\n  const snakeHead = snake[0];\n  return moveInDirection(snakeHead, playerDirection);\n}\n\nfunction* checkWallCollision({ x, y }) {\n  const { boardSize } = yield select(state => ({\n    boardSize: state.board.boardSize,\n  }));\n  const boardLimit = boardSize - 1;\n  return x === 0 || x === boardLimit || y === 0 || y === boardLimit;\n}\n\nfunction* checkSnakeCollision({ x, y }) {\n  const { snake } = yield select(state => ({\n    snake: state.board.snake,\n  }));\n  return snake.some(pos => pos.x === x && pos.y === y);\n}\n\nfunction* checkAppleChomp({ x, y }) {\n  const { apples } = yield select(state => ({\n    apples: state.board.apples,\n  }));\n  return isApple(apples, { x, y });\n}\n\nfunction* gameLogic() {\n  const { currentLocation } = yield getCurrentSnake();\n  const newLocation = yield movePlayer();\n  const didCollide = yield checkWallCollision(newLocation);\n  const didWrap = yield checkSnakeCollision(newLocation);\n  const didEatApple = yield checkAppleChomp(newLocation);\n\n  if (didCollide || didWrap) {\n    yield killSnake(currentLocation);\n  } else {\n    if (didEatApple) {\n      yield eatApple(newLocation);\n    }\n\n    yield moveSnake({ ...newLocation });\n  }\n}\n\nfunction* gameLogicSaga() {\n  // Discard existing, taking latest\n  yield takeLatest(TIME_TICKED, gameLogic);\n}\n\nexport default gameLogicSaga;\n","import { delay } from 'redux-saga/effects';\nimport { put, call, takeEvery, all } from 'redux-saga/effects';\n\nimport { SNAKE_DIED } from './gameLogic';\n// import { PLAYER_CHANGED_DIRECTION } from '../actions/player';\n\nexport const GAME_OVER = Symbol('gameLoop/GAME_OVER');\n\nfunction* gameOver() {\n  yield put({ type: GAME_OVER });\n}\n\nfunction* delayGameOver() {\n  yield call(delay, 20);\n  yield gameOver();\n}\n\nfunction* gameLoopSaga() {\n  yield all([\n    takeEvery(SNAKE_DIED, delayGameOver),\n  ]);\n}\n\nexport default gameLoopSaga;\n","import { GAME_RESET } from '../actions/game';\nimport { GAME_OVER } from '../sagas/gameLoop';\nimport { SNAKE_DIED } from '../sagas/gameLogic';\n\nconst initialState = {\n  alive: false,\n  running: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SNAKE_DIED:\n      return {\n        ...state,\n        alive: false,\n      };\n\n    case GAME_OVER:\n      return {\n        ...state,\n        running: false,\n      };\n\n    case GAME_RESET:\n      return {\n        ...initialState,\n        alive: true,\n        running: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { delay } from 'redux-saga/effects';\nimport { put, take, all, call, takeEvery, race, select } from 'redux-saga/effects';\n\nimport { GAME_RESET } from '../actions/game';\nimport { APPLE_EATEN, SNAKE_DIED } from './gameLogic';\n\nexport const APPLE_ADDED = Symbol('apples/ADDED_APPLE');\n\nconst timeToNextApple = 1000;\n\nfunction* addApple({ x, y }) {\n  yield put({ type: APPLE_ADDED, x, y });\n}\n\nfunction* getApplePositionWhitelist() {\n  const { snake, boardSize } = yield select(state => ({\n    boardSize: state.board.boardSize,\n    snake: state.board.snake,\n  }));\n\n  const validSpots = [];\n  const iterator = [...Array(boardSize - 2).keys()];\n  iterator.forEach((r) => {\n    iterator.forEach((c) => {\n      const newSpot = { x: r + 1, y: c + 1 };\n      if (!snake.some(s => s.x === newSpot.x && s.y === newSpot.y)) {\n        validSpots.push(newSpot);\n      }\n    });\n  });\n  return validSpots;\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction* getRandomApplePosition() {\n  const applePositionWhitelist = yield getApplePositionWhitelist();\n  const selectedPosition = getRandomInt(applePositionWhitelist.length - 1);\n  return applePositionWhitelist[selectedPosition];\n}\n\nfunction* makeApple() {\n  const { dead } = yield race({\n    dead: take(SNAKE_DIED),\n    timer: call(delay, timeToNextApple),\n  });\n  if (!dead) {\n    const randomApplePosition = yield getRandomApplePosition();\n    yield addApple(randomApplePosition);\n  }\n}\n\nfunction* appleSaga() {\n  yield all([\n    takeEvery(APPLE_EATEN, makeApple),\n    takeEvery(GAME_RESET, makeApple),\n  ]);\n}\n\nexport default appleSaga;\n","import { GAME_RESET } from '../actions/game';\nimport { SNAKE_MOVED, APPLE_EATEN } from '../sagas/gameLogic';\nimport { APPLE_ADDED } from '../sagas/apples';\n\nconst removeTailIfNeeded = (snake, intendedLength) => {\n  if (snake.length > intendedLength) {\n    const newSnake = [].concat(snake);\n    newSnake.pop();\n    return newSnake;\n  }\n\n  return snake;\n};\n\nconst initialSnakeSize = 5;\nconst sizeToIncreasePerApple = 4;\n\nconst initialState = {\n  boardSize: 32,\n  snake: [{ x: 15, y: 15 }],\n  applesEaten: 0,\n  apples: [],\n};\n\nconst getLength = applesEaten => (applesEaten * sizeToIncreasePerApple) + initialSnakeSize;\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GAME_RESET:\n      return initialState;\n\n    case SNAKE_MOVED: {\n      const { snake, applesEaten } = state;\n      const { x, y } = action;\n      const length = getLength(applesEaten);\n      const snakeWithNewHead = [{ x, y }, ...snake];\n      const snakeWithTailRemovedIfNeeded = removeTailIfNeeded(snakeWithNewHead, length);\n      return {\n        ...state,\n        snake: snakeWithTailRemovedIfNeeded,\n      };\n    }\n\n    case APPLE_ADDED: {\n      const { apples } = state;\n      const { x, y } = action;\n      return {\n        ...state,\n        apples: [\n          ...apples,\n          { x, y },\n        ],\n      };\n    }\n\n    case APPLE_EATEN: {\n      const { apples, applesEaten } = state;\n      const { x, y } = action;\n      return {\n        ...state,\n        apples: apples.filter(a => !(a.x === x && a.y === y)),\n        applesEaten: applesEaten + 1,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { DIRECTIONS } from '../helpers/consts';\n\nconst {\n  EAST, WEST, NORTH, SOUTH,\n} = DIRECTIONS;\n\nexport const PLAYER_CHANGED_DIRECTION = Symbol('game/PLAYER_CHANGED_DIRECTION');\n\nconst keyToDirectionMap = {\n  w: NORTH,\n  s: SOUTH,\n  a: WEST,\n  d: EAST,\n};\n\nconst directionToReverseMap = {\n  [SOUTH]: NORTH,\n  [NORTH]: SOUTH,\n  [EAST]: WEST,\n  [WEST]: EAST,\n};\n\nconst checkKeyMatters = key => (Object.prototype.hasOwnProperty.call(keyToDirectionMap, key));\nconst checkKeyIsNotReverse = (key, state) => state.player.currentDirection !== directionToReverseMap[keyToDirectionMap[key]];\nconst checkKeyIsNew = (key, state) => state.player.currentDirection !== keyToDirectionMap[key];\n\nexport const changePlayerDirection = ({ key }) => (dispatch, getState) => (\n  checkKeyMatters(key) && checkKeyIsNew(key, getState()) && checkKeyIsNotReverse(key, getState()) ?\n    dispatch({\n      type: PLAYER_CHANGED_DIRECTION,\n      direction: keyToDirectionMap[key],\n    }) : null\n);\n","import { GAME_RESET } from '../actions/game';\nimport { PLAYER_CHANGED_DIRECTION } from '../actions/player';\n\nimport { DIRECTIONS } from '../helpers/consts';\nimport { SNAKE_MOVED } from '../sagas/gameLogic';\nimport { GAME_OVER } from '../sagas/gameLoop';\n\nconst { NORTH } = DIRECTIONS;\n\nconst initialState = {\n  currentDirection: null,\n  nextDirection: NORTH,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SNAKE_MOVED:\n      return {\n        ...state,\n        currentDirection: state.nextDirection,\n      };\n\n    case PLAYER_CHANGED_DIRECTION:\n      return {\n        ...state,\n        nextDirection: action.direction,\n      };\n\n    case GAME_OVER:\n      return initialState;\n\n    case GAME_RESET:\n      return {\n        ...initialState,\n        nextDirection: state.nextDirection || NORTH,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport game from './game';\nimport board from './board';\nimport player from './player';\n\nexport default combineReducers({\n  game,\n  board,\n  player,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers/rootReducer';\nimport gameLoopSaga from './sagas/gameLoop';\nimport gameLogicSaga from './sagas/gameLogic';\nimport appleSaga from './sagas/apples';\n\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n  thunk,\n  logger,\n  sagaMiddleware,\n];\n\nlet selectedComposer = compose;\n\nif (process.env.NODE_ENV === 'development') {\n  selectedComposer = composeWithDevTools;\n}\n\nconst composedEnhancers = selectedComposer(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers,\n);\n\n// then run the saga\nsagaMiddleware.run(gameLoopSaga);\nsagaMiddleware.run(gameLogicSaga);\nsagaMiddleware.run(appleSaga);\n\nexport default store;\n","import React from 'react';\nimport MainLoop from 'mainloop.js';\n\nconst FPS = 60;\nconst TIMESTEP = 1000 / FPS;\nconst MAX_FPS = 60;\n\nconst noop = () => {};\n\n/**\n * A wrapper to animate a given component.\n * All props are passed down to the child component.\n *\n * The getUpdate callback takes a reference to the animated component's backing instance,\n * and returns the update function.\n *\n * The update function takes the elapsed time (in milliseconds) since the last update,\n * and returns the props and context for the animated component.\n *\n * @param  {ReactComponent} AnimatedComponent\n * @param  {function} userUpdate\n * @param {function} userBegin\n * @return {ReactComponent} An animated version of the given component.\n */\nexport default (timestep = TIMESTEP, maxFPS = MAX_FPS) => (AnimatedComponent) => {\n  class Animator extends React.Component {\n    componentDidMount() {\n      const { userUpdate, userBegin } = this.props;\n      const begin = userBegin || noop;\n      const update = delta => userUpdate(delta);\n      const draw = (/* interpolationPercentage */) => this.forceUpdate();\n      const endOfFrame = (/* fps */_, panic) => {\n        // TODO let user supply callback for this\n        if (panic) {\n          // eslint-disable-next-line\n          loop.resetFrameDelta();\n        }\n      };\n\n      const loop = MainLoop\n        .setMaxAllowedFPS(maxFPS)\n        .setSimulationTimestep(timestep)\n        .setBegin(begin)\n        .setUpdate(update)\n        .setDraw(draw)\n        .setEnd(endOfFrame);\n\n        // eslint-disable-next-line\n      this.setState({\n        loop,\n      });\n\n      if (this.props.run) {\n        loop.start();\n      }\n    }\n\n    // eslint-disable-next-line\n    UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.run) {\n        this.state.loop.start();\n      } else {\n        this.state.loop.stop();\n      }\n    }\n\n    shouldComponentUpdate() {\n      // doesn't affect initial render\n      return false; // take control of when we render using forceUpdate\n    }\n\n    componentWillUnmount() {\n      this.state.loop.stop();\n    }\n\n    render() {\n      return (\n        <AnimatedComponent\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  // Animator.propTypes = {\n  //   run: PropTypes.bool,\n  // };\n\n  Animator.defaultProps = {\n    run: true,\n  };\n\n  return Animator;\n};\n","import React from 'react';\n\nimport './board.css';\n\nimport { getBoard } from '../helpers/board';\nimport { TILES } from '../helpers/consts';\n\nconst {\n  WALL, SNAKE_BODY, SNAKE_DEAD, SNAKE_HEAD, SNAKE_NECK, SNAKE_TAIL, APPLE,\n} = TILES;\n\nconst snakeTileToContent = {\n  [SNAKE_DEAD]: 'd',\n  [SNAKE_HEAD]: 's',\n  [SNAKE_NECK]: 'n',\n  [SNAKE_BODY]: 'e',\n  [SNAKE_TAIL]: 'k',\n  [APPLE]: 'a',\n};\n\nconst renderTile = tile => (\n  snakeTileToContent[tile]\n);\n\nconst mapTileToClass = tile => (\n  tile === WALL ? 'wall' : 'empty'\n);\n\nconst renderCol = ({ tile }, i) => (\n  <div className={(`col ${mapTileToClass(tile)}`)} key={i}>\n    <div className=\"tile\">{renderTile(tile)}</div>\n  </div>\n);\nconst renderRow = (row, i) => (\n  <div className=\"row\" key={i}>\n    {row.map(renderCol)}\n  </div>\n);\nconst BoardComponent = ({ board, alive }) => (\n  <div className=\"board\">\n    {getBoard(board, alive).map(renderRow)}\n  </div>\n);\n\nexport default BoardComponent;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Animator from './animator';\nimport BoardComponent from './board';\n\nimport { tickTime as userUpdate } from '../actions/game';\n\nconst TIMESTEP = 1000 / 60;\nconst MAX_FPS = 60;\n\nconst animate = Animator(TIMESTEP, MAX_FPS);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  userUpdate,\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(animate(BoardComponent));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { startGameIfPossible } from '../actions/game';\nimport { changePlayerDirection } from '../actions/player';\n\nimport AnimatedBoard from './animatedBoard';\n\nexport class GameComponent extends Component {\n  componentDidMount() {\n    document.addEventListener('keypress', this.props.changePlayerDirection);\n    document.addEventListener('keypress', this.props.startGameIfPossible);\n  }\n  componentDidUnMount() {\n    document.removeEventListener('keypress', this.props.changePlayerDirection);\n    document.removeEventListener('keypress', this.props.startGameIfPossible);\n  }\n  render() {\n    const {\n      // eslint-disable-next-line no-shadow\n      board, alive, running, applesEaten,\n    } = this.props;\n    return (\n      <div>\n        <AnimatedBoard board={board} alive={alive} run={running} />\n\n        <p>\n          {!running ? \"Press any key (W, S, A, D) to start game\" : null }\n        </p>\n        <p>Score: {applesEaten}</p>\n        {!alive ? <p>Dead!</p> : null}\n      </div>);\n  }\n}\n\nconst mapStateToProps = state => ({\n  alive: state.game.alive,\n  running: state.game.running,\n  applesEaten: state.board.applesEaten,\n  board: state.board,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  changePlayerDirection,\n  startGameIfPossible,\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GameComponent);\n","import React from 'react';\n\nimport './fork-me.css';\n\n// Thanks go to http://tholman.com/github-corners/\n\nconst forkMe = () => (\n  // eslint-disable-next-line\n  <a href=\"https://github.com/seanmailander/react-danger-noodle\" className=\"github-corner\" aria-label=\"View source on Github\"><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={{fill:\"#30228F\", color:\"#665BB2\", position: \"absolute\", top: 0,border: 0, right: 0}} aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{\"transformOrigin\": \"130px 106px\"}} className=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path></svg></a>\n);\n\nexport default forkMe;\n","import React from 'react';\n\nimport Game from './game';\nimport ForkMe from './fork-me';\n\nimport './app.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <header>\n      Danger Noodle\n      <ForkMe />\n    </header>\n\n    <main>\n      <Game />\n    </main>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n\nimport store from './store';\nimport App from './components/app';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nconst target = document.querySelector('#root');\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  target,\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}